using Dapper;
using DapperExtensions;
using log4net;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;

namespace YY.Edu.Sys.Api.Controllers
{
    [RoutePrefix("api/WxUserInfo")]
    public class WxUserInfoController : ApiController
    {

        private static readonly ILog logs = Comm.Helper.LogHelper.GetInstance();

        // GET: api/WxUserInfo
        public IEnumerable<string> Get()
        {
            return new string[] { "value1", "value2" };
        }

        // GET: api/WxUserInfo/5
        public string Get(int id)
        {
            return "value";
        }

        [HttpPost]
        public IHttpActionResult Create(Sys.Models.WxUserInfo wxUserInfo)
        {

            if (!ModelState.IsValid)
                return BadRequest();

            try
            {
                var sql = "select count(WxInfoID) from WxUserInfo where OpenId=@openId";
                var result = Comm.Helper.DapperHelper.Instance.QueryFirst<int>(sql, new
                {
                    openId = wxUserInfo.OpenId
                });

                if (result == 0)
                {
                    wxUserInfo.AddTime = DateTime.Now;
                    wxUserInfo.LastLoginTime = DateTime.Now;
                    wxUserInfo.UnFollowTime = DateTime.Now;
                    var flag = Comm.Helper.DapperHelper.Instance.Insert(wxUserInfo);
                    return flag > 0 ? Ok(Comm.ResponseModel.ResponseModelBase.Success()) : Ok(Comm.ResponseModel.ResponseModelBase.SysError());
                }
                else
                {

                    sql = "select * from WxUserInfo where OpenId=@openId";
                    var wxuserInfo = Comm.Helper.DapperHelper.Instance.QueryFirst<Sys.Models.WxUserInfo>(sql, new
                    {
                        openId = wxUserInfo.OpenId
                    });

                    wxuserInfo.LastLoginTime = DateTime.Now;
                    var flag = Comm.Helper.DapperHelper.Instance.Update(wxuserInfo);
                    return flag ? Ok(Comm.ResponseModel.ResponseModelBase.Success()) : Ok(Comm.ResponseModel.ResponseModelBase.SysError());
                }

            }
            catch (Exception ex)
            {
                logs.Error("添加关注用户信息失败", ex);
                return BadRequest();
            }

        }

        // POST: api/WxUserInfo
        public void Post([FromBody]string value)
        {
        }

        // PUT: api/WxUserInfo/5
        public void Put(int id, [FromBody]string value)
        {
        }

        // DELETE: api/WxUserInfo/5
        public void Delete(int id)
        {
        }
    }
}
